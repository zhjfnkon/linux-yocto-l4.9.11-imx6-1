/*
 * Copyright 2016 Freescale Semiconductor, Inc.
 *
 * This file is dual-licensed: you can use it either under the terms
 * of the GPL or the X11 license, at your option. Note that this dual
 * licensing only applies to this file, and not this project as a
 * whole.
 *
 *  a) This file is free software; you can redistribute it and/or
 *     modify it under the terms of the GNU General Public License as
 *     published by the Free Software Foundation; either version 2 of the
 *     License, or (at your option) any later version.
 *
 *     This file is distributed in the hope that it will be useful,
 *     but WITHOUT ANY WARRANTY; without even the implied warranty of
 *     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *     GNU General Public License for more details.
 *
 * Or, alternatively,
 *
 *  b) Permission is hereby granted, free of charge, to any person
 *     obtaining a copy of this software and associated documentation
 *     files (the "Software"), to deal in the Software without
 *     restriction, including without limitation the rights to use,
 *     copy, modify, merge, publish, distribute, sublicense, and/or
 *     sell copies of the Software, and to permit persons to whom the
 *     Software is furnished to do so, subject to the following
 *     conditions:
 *
 *     The above copyright notice and this permission notice shall be
 *     included in all copies or substantial portions of the Software.
 *
 *     THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
 *     EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
 *     OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
 *     NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
 *     HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
 *     WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 *     FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
 *     OTHER DEALINGS IN THE SOFTWARE.
 */

/dts-v1/;

#include "imx6qp.dtsi"
#include "imx6qdl-sabresd.dtsi"
#include <dt-bindings/pwm/pwm.h>

/ {
	model = "Freescale i.MX6 Quad Plus Nkon Core Board for Yian";
	compatible = "fsl,imx6qp-sabresd", "fsl,imx6qp";

	backlight: backlight {
		compatible = "pwm-backlight";
		pwms = <&pwm1 0 5000000 PWM_POLARITY_INVERTED>;
		brightness-levels = <0 4 8 16 32 64 128 255>;
		default-brightness-level = <7>;
		enable-gpios = <&gpio4 20 GPIO_ACTIVE_HIGH>;
		status = "okay";
	};

	sound {
		compatible = "fsl,imx6q-sabresd-wm8962",
			   "fsl,imx-audio-wm8962";
		hp-det-gpios = <>;
		mic-det-gpios = <>;
	};

	regulators {
		reg_pcie: regulator@3 {
			compatible = "regulator-fixed";
			reg = <3>;
			pinctrl-names = "default";
			pinctrl-0 = <>;
			regulator-name = "MPCIE_3V3";
			regulator-min-microvolt = <3300000>;
			regulator-max-microvolt = <3300000>;
			gpio = <>;
			regulator-always-on;
		};

	};

	lcd@0 {
		status = "disable";
	};
};

&reg_arm {
	vin-supply = <&sw2_reg>;
};

&iomuxc {
	imx6qdl-sabresd {
		pinctrl_hog: hoggrp {
			fsl,pins = <
				MX6QDL_PAD_NANDF_D0__GPIO2_IO00 0x80000000
				MX6QDL_PAD_NANDF_D1__GPIO2_IO01 0x80000000
				MX6QDL_PAD_NANDF_D2__GPIO2_IO02 0x80000000
				MX6QDL_PAD_NANDF_D3__GPIO2_IO03 0x80000000
				MX6QDL_PAD_GPIO_0__CCM_CLKO1    0x130b0
				MX6QDL_PAD_ENET_TXD1__GPIO1_IO29 0x80000000
				MX6QDL_PAD_ENET_CRS_DV__GPIO1_IO25 0x80000000
				MX6QDL_PAD_EIM_D26__GPIO3_IO26 0x80000000
				MX6QDL_PAD_EIM_CS1__GPIO2_IO24 0x80000000
				MX6QDL_PAD_ENET_RXD0__GPIO1_IO27 0x80000000
				MX6QDL_PAD_EIM_EB3__GPIO2_IO31 0x80000000
				MX6QDL_PAD_SD1_CMD__GPIO1_IO18 0x80000000
				MX6QDL_PAD_SD3_RST__GPIO7_IO08	0x80000000
				MX6QDL_PAD_GPIO_9__GPIO1_IO09 	0x80000000
				MX6QDL_PAD_NANDF_CS0__GPIO6_IO11 0x80000000
				MX6QDL_PAD_NANDF_CS1__GPIO6_IO14 0x80000000
				MX6QDL_PAD_NANDF_CS2__GPIO6_IO15 0x80000000
				MX6QDL_PAD_NANDF_CS3__GPIO6_IO16 0x80000000
			>;
		};

		pinctrl_usdhc2: usdhc2grp {
			fsl,pins = <
				MX6QDL_PAD_SD2_CMD__SD2_CMD		0x17059
				MX6QDL_PAD_SD2_CLK__SD2_CLK		0x10071
				MX6QDL_PAD_SD2_DAT0__SD2_DATA0		0x17059
				MX6QDL_PAD_SD2_DAT1__SD2_DATA1		0x17059
				MX6QDL_PAD_SD2_DAT2__SD2_DATA2		0x17059
				MX6QDL_PAD_SD2_DAT3__SD2_DATA3		0x17059
				MX6QDL_PAD_NANDF_D4__SD2_DATA4		0x17059
				MX6QDL_PAD_NANDF_D5__SD2_DATA5		0x17059
				MX6QDL_PAD_NANDF_D6__SD2_DATA6		0x17059
				MX6QDL_PAD_NANDF_D7__SD2_DATA7		0x17059
			>;
		};

		pinctrl_usdhc3: usdhc3grp {
			fsl,pins = <
				MX6QDL_PAD_SD3_CMD__SD3_CMD		0x17059
				MX6QDL_PAD_SD3_CLK__SD3_CLK		0x10071
				MX6QDL_PAD_SD3_DAT0__SD3_DATA0		0x17059
				MX6QDL_PAD_SD3_DAT1__SD3_DATA1		0x17059
				MX6QDL_PAD_SD3_DAT2__SD3_DATA2		0x17059
				MX6QDL_PAD_SD3_DAT3__SD3_DATA3		0x17059
			>;
		};

		pinctrl_uart2: uart2grp {
			fsl,pins = <
				MX6QDL_PAD_SD3_DAT5__UART2_TX_DATA      0x1b0b1
				MX6QDL_PAD_SD3_DAT4__UART2_RX_DATA      0x1b0b1
			>;
		};

		pinctrl_uart3: uart3grp {
			fsl,pins = <
				MX6QDL_PAD_EIM_D24__UART3_TX_DATA       0x1b0b1
				MX6QDL_PAD_EIM_D25__UART3_RX_DATA       0x1b0b1
			>;
		};

		pinctrl_uart4: uart4grp {
			fsl,pins = <
				MX6QDL_PAD_KEY_COL0__UART4_TX_DATA	0x1b0b1
				MX6QDL_PAD_KEY_ROW0__UART4_RX_DATA      0x1b0b1
			>;
		};

		pinctrl_uart5: uart5grp {
			fsl,pins = <
				MX6QDL_PAD_KEY_COL1__UART5_TX_DATA      0x1b0b1
				MX6QDL_PAD_KEY_ROW1__UART5_RX_DATA      0x1b0b1
			>;
		};

		pinctrl_weim_cs0: weimcsgrp {
			fsl,pins = <
				MX6QDL_PAD_EIM_CS0__EIM_CS0_B 0xb0b1
			>;
		};

		pinctrl_weim_uart: weimuartgrp {
			fsl,pins = <
				/* weim misc */
				MX6QDL_PAD_EIM_OE__EIM_OE_B 0xb0b1
				MX6QDL_PAD_EIM_RW__EIM_RW 0xb0b1
				/* weim data */
				MX6QDL_PAD_EIM_D16__EIM_DATA16 0x1b0b0
				MX6QDL_PAD_EIM_D17__EIM_DATA17 0x1b0b0
				MX6QDL_PAD_EIM_D18__EIM_DATA18 0x1b0b0
				MX6QDL_PAD_EIM_D19__EIM_DATA19 0x1b0b0
				MX6QDL_PAD_EIM_D20__EIM_DATA20 0x1b0b0
				MX6QDL_PAD_EIM_D21__EIM_DATA21 0x1b0b0
				MX6QDL_PAD_EIM_D22__EIM_DATA22 0x1b0b0
				MX6QDL_PAD_EIM_D23__EIM_DATA23 0x1b0b0
				/* weim address */
				MX6QDL_PAD_EIM_DA15__EIM_AD15 0xb0b1
				MX6QDL_PAD_EIM_DA14__EIM_AD14 0xb0b1
				MX6QDL_PAD_EIM_DA13__EIM_AD13 0xb0b1
				MX6QDL_PAD_EIM_DA12__EIM_AD12 0xb0b1
				MX6QDL_PAD_EIM_DA11__EIM_AD11 0xb0b1
				MX6QDL_PAD_EIM_DA10__EIM_AD10 0xb0b1
				MX6QDL_PAD_EIM_DA9__EIM_AD09 0xb0b1
				MX6QDL_PAD_EIM_DA8__EIM_AD08 0xb0b1
				MX6QDL_PAD_EIM_DA7__EIM_AD07 0xb0b1
				MX6QDL_PAD_EIM_DA6__EIM_AD06 0xb0b1
				MX6QDL_PAD_EIM_DA5__EIM_AD05 0xb0b1
				MX6QDL_PAD_EIM_DA4__EIM_AD04 0xb0b1
				MX6QDL_PAD_EIM_DA3__EIM_AD03 0xb0b1
				MX6QDL_PAD_EIM_DA2__EIM_AD02 0xb0b1
				MX6QDL_PAD_EIM_DA1__EIM_AD01 0xb0b1
				MX6QDL_PAD_EIM_DA0__EIM_AD00 0xb0b1
			>;
		};

		pinctrl_pwm1: pwm1grp {
			fsl,pins = <
				MX6QDL_PAD_DISP0_DAT8__PWM1_OUT 0x1b0b1
			>;
		};
	};
};


&usdhc3 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_usdhc3>;
	bus-width = <4>;
	cd-gpios = <&gpio6 17 GPIO_ACTIVE_LOW>;
	wp-gpios = <&gpio6 18 GPIO_ACTIVE_HIGH>;
	no-1-8-v;
	keep-power-in-suspend;
	enable-sdio-wakeup;
	status = "okay";
};


&ldb {
	lvds-channel@0 {
		crtc = "ipu2-di0";
	};

	lvds-channel@1 {
		crtc = "ipu2-di1";
	};
};

&mxcfb1 {
	prefetch;
	status = "okay";
};

&mxcfb2 {
	prefetch;
	status = "okay";
};

&mxcfb3 {
	prefetch;
	status = "okay";
};

&mxcfb4 {
	prefetch;
	status = "okay";
};

&ov564x {
	AVDD-supply = <&vgen6_reg>; /* 2.8v */
	DOVDD-supply = <&sw4_reg>; /* 1.8v */
};

&ov564x_mipi {
	AVDD-supply = <&vgen6_reg>; /* 2.8v */
	DOVDD-supply = <&sw4_reg>; /* 1.8v */
};

&pcie {
	pcie-bus-supply = <&vgen3_reg>; /* 1.8v pwr up pcie ext osc on revb */
	reset-gpio = <&gpio7 12 0>;
	status = "okay";
};

&pre1 {
	status = "okay";
};

&pre2 {
	status = "okay";
};

&pre3 {
	status = "okay";
};

&pre4 {
	status = "okay";
};

&prg1 {
	memory-region = <&memory>;
	status = "okay";
};

&prg2 {
	memory-region = <&memory>;
	status = "okay";
};

&sata {
	status = "okay";
};


&i2c1 {
	status = "okay";
	ds3231: ds3231@68 {
		compatible = "maxim,ds3231";
		reg = <0x68>;
		#clock-cells = <1>;
	};
};

&i2c3 {
	status = "disable";
};


&reg_audio {
	compatible = "regulator-fixed";
	reg = <2>;
	regulator-name = "wm8962-supply";
	gpio = <&gpio1 3 0>;
	enable-active-high;
};


&ecspi1 {
	status = "disable";
};


&uart2 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_uart2>;
	status = "okay";
};


&uart3 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_uart3>;
	status = "okay";
};


&uart4 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_uart4>;
	status = "okay";
};

&uart5 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_uart5>;
	status = "okay";
};

&weim {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_weim_uart &pinctrl_weim_cs0>;
	#address-cells = <2>;
	#size-cells = <1>;
	ranges = <0 0 0x08000000 0x08000000>;
	status = "okay";
	serial@8000000 {
		compatible = "ns16750";
		reg = <0 0 0x08>;
		clock-frequency = <16000000>;
		interrupt-parent = <&gpio1>;
		interrupts = <4 IRQ_TYPE_LEVEL_HIGH>;
		no-loopback-test;
		fsl,weim-cs-timing = <0x00660081 0x00000001 0x1c022000
			0x0000c000 0x1404a38e 0x00000000>;
		status = "okay";
	};

	serial@8000008 {
		compatible = "ns16750";
		reg = <0 0x08 0x08>;
		clock-frequency = <16000000>;
		interrupt-parent = <&gpio1>;
		interrupts = <7 IRQ_TYPE_LEVEL_HIGH>;
		no-loopback-test;
		fsl,weim-cs-timing = <0x00660081 0x00000001 0x1c022000
			0x0000c000 0x1404a38e 0x00000000>;
		status = "okay";
	};

	serial@8000010 {
		compatible = "ns16750";
		reg = <0 0x10 0x08>;
		clock-frequency = <16000000>;
		interrupt-parent = <&gpio1>;
		interrupts = <8 IRQ_TYPE_LEVEL_HIGH>;
		no-loopback-test;
		fsl,weim-cs-timing = <0x00660081 0x00000001 0x1c022000
			0x0000c000 0x1404a38e 0x00000000>;
		status = "okay";
	};

	serial@8000018 {
		compatible = "ns16750";
		reg = <0 0x18 0x08>;
		clock-frequency = <16000000>;
		interrupt-parent = <&gpio1>;
		interrupts = <9 IRQ_TYPE_LEVEL_HIGH>;
		no-loopback-test;
		fsl,weim-cs-timing = <0x00660081 0x00000001 0x1c022000
			0x0000c000 0x1404a38e 0x00000000>;
		status = "okay";
	};
};

&pwm1 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_pwm1>;
	status = "okay";
};
